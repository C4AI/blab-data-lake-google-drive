"""Contains a class that represents a file or a directory on Google Drive."""
from __future__ import annotations

from dataclasses import dataclass
from datetime import datetime

import blabgddatalake.remote.directory as directory

from blabgddatalake.common import TreeNode


@dataclass
class RemoteFile(TreeNode):
    """Represents a regular file or a directory stored on Google Drive."""

    name: str
    """File name (without directory)"""

    id: str
    """File id (generated by Google Drive)"""

    mime_type: str
    """MIME type"""

    created_time: datetime
    """Creation timestamp"""

    modified_time: datetime
    """Last modification timestamp"""

    modified_by: str
    """Name of the user who made the last change"""

    web_url: str
    """URL to access the file on a browser"""

    icon_url: str
    """URL of the file icon (does not require authentication)"""

    parent: directory.RemoteDirectory | None
    """Parent directory"""

    @property
    def parent_id(self) -> str | None:
        """Id of the parent directory.

        Returns:
            The id of the parent directory, or ``None`` if this is the root
        """
        return p.id if (p := self.parent) is not None else None
